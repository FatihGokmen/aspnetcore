@page "/complextable"
@inject IJSRuntime JSRuntime
@using Wasm.Performance.TestApp.Shared.ComplexTable

<h1>20 x 200 Grid</h1>

<fieldset>
    <button id="show" @onclick="Show">Show</button>
    <button id="hide" @onclick="Hide">Hide</button>
    @if (forecasts != null)
    {
        <button id="change-page" @onclick="ChangePage">Switch pages</button>
    }
</fieldset>

@if (forecasts == null)
{
    <p><em>(No data assigned)</em></p>
}
else
{
    <TableComponent Data="@forecasts" Columns="@Columns"></TableComponent>
}

@code {
    private WeatherForecast[] forecasts;
    public List<string> Columns { get; set; } = new List<string>
{
        "Date", "TemperatureC", "TemperatureF", "Summary", "Date", "TemperatureC", "TemperatureF", "Summary", "Date", "TemperatureC",
        "Date", "TemperatureC", "TemperatureF", "Summary", "Date", "TemperatureC", "TemperatureF", "Summary", "Date", "TemperatureC"
    };

    private static string[] sampleSummaries = new[] { "Balmy", "Chilly", "Freezing", "Bracing" };
    private static WeatherForecast[] staticSampleDataPage1 = Enumerable.Range(0, 200).Select(CreateSampleDataItem).ToArray();
    private static WeatherForecast[] staticSampleDataPage2 = Enumerable.Range(200, 200).Select(CreateSampleDataItem).ToArray();

    private static WeatherForecast CreateSampleDataItem(int index) => new WeatherForecast
    {
        Date = DateTime.Now.Date.AddDays(index),
        Summary = sampleSummaries[index % sampleSummaries.Length],
        TemperatureC = index,
    };

    void Show()
    {
        forecasts = staticSampleDataPage1;
    }

    void Hide()
    {
        forecasts = null;
    }

    void ChangePage()
    {
        forecasts = (forecasts == staticSampleDataPage1) ? staticSampleDataPage2 : staticSampleDataPage1;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        BenchmarkEvent.Send(JSRuntime, "Finished rendering table");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
